# run `source ~/.tmux.conf` in the tmux status bar to let the changes take effect

# ################# #
# BASIC TMUX CONFIG #
# ################# #

# remap prefix from the default C-b to C-a
# set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
# bind C-a send-prefix
# unbind C-b

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' {
    set -g mouse-select-pane on; set -g mode-mouse on
    set -g mouse-resize-pane on; set -g mouse-select-window on
}

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' {
    set -g mouse on
    # set c-b c-m to shift mouse mode
    bind-key    -T prefix       C-m set -g mouse
    # Emulate scrolling by sending up and down keys if these commands are running in the pane
    tmux_commands_with_legacy_scroll="nano less more man git"

    bind-key -T root WheelUpPane \
        if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
            'send -Mt=' \
            'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                "send -t= Up" "copy-mode -et="'

    bind-key -T root WheelDownPane \
        if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
            'send -Mt=' \
            'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                "send -t= Down" "send -Mt="'

    # bind C-u to enter copy mode
    # bind-key    -T prefix       C-u copy-mode 

    # bind hjkl as move through panes. Without vim-tmux-navigator
    bind-key -r -T prefix     C-k  select-pane -U
    bind-key -r -T prefix     C-j  select-pane -D
    bind-key -r -T prefix     C-h  select-pane -L
    bind-key -r -T prefix     C-l  select-pane -R

}

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
    set -g utf8 on
    set -g status-utf8 on
    set -g mouse-utf8 on
}

# set vi for copy mode
setw -g mode-keys vi
# bind-key syntax changed in 2.4 -- selection / copy / paste
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' {
    bind-key -t vi-copy v   begin-selection
    bind-key -t vi-copy V   send -X select-line
    bind-key -t vi-copy C-v rectangle-toggle
    bind-key -t vi-copy y   copy-pipe 'pbcopy'
    bind-key -T vi-copy MouseDragEnd1Pane send -X copy-pipe "pbcopy"
    bind-key -T vi-copy Enter send -X copy-pipe "pbcopy"
}

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' {
    bind-key -T copy-mode-vi v   send -X begin-selection
    bind-key -T copy-mode-vi V   send -X select-line
    bind-key -T copy-mode-vi C-v send -X rectangle-toggle
    # set copy to system clipboard
    bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
}

# bind - & | for splitting panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


# ############################ #
# THE END OF BASIC TMUX CONFIG #
# ############################ #

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# tmux-mem-cpu-load
set -g status-interval 2
# set -g status-left "#S #[fg=black,bg=color39]#(tmux-mem-cpu-load --colors --interval 2) #[default]"
# set -g status-left "#S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2) #[default]"
set -g status-left-length 60

# manual installation of https://github.com/xamut/tmux-network-bandwidth
set-option -g status-right " #(scutil --get LocalHostName) #{network_bandwidth}"
run-shell ~/.tmux/tmux-network-bandwidth/tmux-network-bandwidth.tmux


if-shell -b '[ $(scutil --get LocalHostName) = 'ZhuXYs-Air' ]' {
    # tmux-mem-cpu-load
    set -g status-left "#S #[fg=green,bg=black]#(tmux-mem-cpu-load -g 0 -a 0 -c --interval 2) #[default]"
}


if-shell -b '[ $(scutil --get LocalHostName) = 'ZhuXYs-Pro' ]' {
    # set color
    set-option -g status-style fg=black,bg=color39
    # tested good colors are:
    # black + 33 or 39 or white + 26 or 27
    # but the default green is also good

    # tmux-mem-cpu-load
    set -g status-left "#S #[fg=black,bg=color39]#(tmux-mem-cpu-load -g 0 -a 0 -c --interval 2) #[default]"

    # TMUX Plugins
    # List of plugins
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    
    set -g @plugin 'tmux-plugins/tmux-resurrect'
    # use prefix + Ctrl-s to save
    # use prefix + Ctrl-r to restore
    
    # set -g @plugin 'nhdaly/tmux-better-mouse-mode'
    
    # Other examples:
    # set -g @plugin 'github_username/plugin_name'
    # set -g @plugin 'github_username/plugin_name#branch'
    # set -g @plugin 'git@github.com:user/plugin'
    # set -g @plugin 'git@bitbucket.com:user/plugin'
    
    # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    run '~/.tmux/plugins/tpm/tpm'
}
